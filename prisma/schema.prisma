// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  OWNER
  ADMIN
  MEMBER
}

enum Status {
  PENDING
  ACCEPTED
  DECLINED
  EXPIRED
}

model User {
  id                 String             @id @default(uuid())
  userId             String             @unique
  name               String
  email              String
  organizations      UserOrganization[]
  organizationsOwned Organization[]
  invitations        Invitation[]
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @default(now()) @updatedAt
}

model Organization {
  id          String             @id @default(uuid())
  name        String
  ownerId     String
  owner       User               @relation(fields: [ownerId], references: [userId])
  members     UserOrganization[]
  invitations Invitation[]
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @default(now()) @updatedAt

  @@index([ownerId])
}

model UserOrganization {
  id             String       @id @default(uuid())
  userId         String
  organizationId String
  role           Role         @default(MEMBER)
  user           User         @relation(fields: [userId], references: [userId])
  organization   Organization @relation(fields: [organizationId], references: [id])
  createdAt      DateTime     @default(now())

  @@unique([userId, organizationId])
}

model Invitation {
  id             String       @id @default(uuid())
  email          String
  status         Status       @default(PENDING)
  role           String
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
  invitedById    String
  invitedBy      User         @relation(fields: [invitedById], references: [userId])
  createdAt      DateTime     @default(now())
  expiresAt      DateTime
}
